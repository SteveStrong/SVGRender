@using SVGRender.Components

<div class="svg-selector-container">
    <div class="row mb-4">
        <div class="col-md-6">
            <h3>SVG File Selector</h3>
            <div class="form-group">
                <label for="svgSelect" class="form-label">Choose an SVG file:</label>
                <select id="svgSelect" class="form-select" @onchange="OnSvgSelectionChanged">
                    <option value="">-- Select an SVG --</option>
                    @foreach (var kvp in SvgRenderer.AvailableSvgFiles)
                    {
                        <option value="@kvp.Key" selected="@(kvp.Key == SelectedSvgFile)">@kvp.Value</option>
                    }
                </select>
            </div>
            
            @if (!string.IsNullOrEmpty(SelectedSvgFile))
            {
                <div class="mt-3">
                    <h5>Styling Options</h5>
                    <div class="form-group mb-2">
                        <label for="containerStyle" class="form-label">Container Style:</label>
                        <input id="containerStyle" type="text" class="form-control" @bind="ContainerStyle" 
                               placeholder="e.g., border: 2px solid #ccc; padding: 20px;" />
                    </div>
                    <div class="form-group">
                        <label for="cssClass" class="form-label">CSS Class:</label>
                        <input id="cssClass" type="text" class="form-control" @bind="CssClass" 
                               placeholder="e.g., my-svg-class" />
                    </div>
                </div>
            }
        </div>
        
        <div class="col-md-6">
            @if (!string.IsNullOrEmpty(SelectedSvgFile))
            {
                <h4>Preview: @SvgRenderer.AvailableSvgFiles[SelectedSvgFile]</h4>
                <div class="svg-preview-container">
                    <SvgRenderer FilePath="@SelectedSvgFile" 
                                ContainerStyle="@EffectiveContainerStyle" 
                                CssClass="@CssClass" />
                </div>
            }
            else
            {
                <div class="text-muted text-center p-5">
                    <i class="display-1">ðŸŽ¨</i>
                    <p>Select an SVG file to see the preview</p>
                </div>
            }
        </div>
    </div>
    
    @if (!string.IsNullOrEmpty(SelectedSvgFile))
    {
        <div class="row">
            <div class="col-12">
                <h4>All SVG Files Gallery</h4>
                <div class="row">
                    @foreach (var kvp in SvgRenderer.AvailableSvgFiles)
                    {
                        <div class="col-md-4 col-lg-3 mb-3">
                            <div class="card h-100 @(kvp.Key == SelectedSvgFile ? "border-primary" : "")">
                                <div class="card-body text-center">
                                    <SvgRenderer FilePath="@kvp.Key" 
                                                ContainerStyle="max-width: 150px; margin: 0 auto;" />
                                    <h6 class="card-title mt-2">@kvp.Value</h6>
                                    <button class="btn btn-sm @(kvp.Key == SelectedSvgFile ? "btn-primary" : "btn-outline-primary")" 
                                            @onclick="() => SelectSvg(kvp.Key)">
                                        @(kvp.Key == SelectedSvgFile ? "Selected" : "Select")
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
</div>

<style>
    .svg-selector-container {
        padding: 20px;
    }
    
    .svg-preview-container {
        border: 2px dashed #dee2e6;
        border-radius: 8px;
        padding: 20px;
        text-align: center;
        min-height: 200px;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .card {
        transition: all 0.3s ease;
    }
    
    .card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }
    
    .form-label {
        font-weight: 600;
        color: #495057;
    }
    
    .form-select, .form-control {
        border-radius: 6px;
    }
</style>
