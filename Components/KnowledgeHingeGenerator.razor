@using SVGRender.Services
@using SVGRender.Knowledge
@using SVGRender.Components

<div class="knowledge-hinge-generator-container">
    <div class="row">
        <div class="col-md-6">
            <h4>Knowledge-Based Hinge Generator</h4>
              <div class="form-group mb-3">
                <label class="form-label">Preset Configuration:</label>
                <select class="form-select" @onchange="OnPresetChanged" value="@SelectedPreset">
                    <option value="">Select a preset...</option>
                    @foreach (var preset in AvailablePresets)
                    {
                        <option value="@preset">@preset</option>
                    }
                </select>
            </div>

            <div class="form-group mb-3">
                <label class="form-label">Instance Name (optional):</label>
                <input type="text" class="form-control" @bind="InstanceName" placeholder="my_hinge_instance" />
            </div>

            <div class="d-grid gap-2">
                <button class="btn btn-primary" @onclick="CreateHingeInstance" disabled="@IsCreating">
                    @if (IsCreating)
                    {
                        <span class="spinner-border spinner-border-sm me-2"></span>
                        <text>Creating...</text>
                    }
                    else
                    {
                        <text>Create Hinge Instance</text>
                    }
                </button>
                
                @if (CurrentHingeInstance != null)
                {
                    <button class="btn btn-success" @onclick="GenerateSVG" disabled="@IsGenerating">
                        @if (IsGenerating)
                        {
                            <span class="spinner-border spinner-border-sm me-2"></span>
                            <text>Generating SVG...</text>
                        }
                        else
                        {
                            <text>Generate SVG</text>
                        }
                    </button>
                }
            </div>

            @if (!string.IsNullOrEmpty(StatusMessage))
            {
                <div class="alert alert-info mt-3">
                    @StatusMessage
                </div>
            }

            @if (ValidationErrors.Any())
            {
                <div class="alert alert-warning mt-3">
                    <strong>Validation Errors:</strong>
                    <ul class="mb-0">
                        @foreach (var error in ValidationErrors)
                        {
                            <li>@error</li>
                        }
                    </ul>
                </div>
            }
        </div>

        <div>
            <h5>Generated JSON</h5>
            <p class="text-muted">This JSON represents the hinge instance parameters and can be used for further processing or storage.</p>
            <pre>@RenderAsJson()</pre>
        </div>

        <div class="col-md-6">
            @if (CurrentHingeInstance != null)
            {
                <h5>Hinge Instance Details</h5>
                <pre class="knowledge-hinge-details">@GetHingeInstanceDetails()</pre>
                
                @if (!string.IsNullOrEmpty(GeneratedSVGFile))
                {
                    <h6 class="mt-4">Generated SVG Preview</h6>
                    <div class="preview-container">
                        <SvgRenderer FilePath="@GeneratedSVGFile" 
                                   ContainerStyle="border: 2px solid #ddd; padding: 10px; background: white; border-radius: 5px;" />
                    </div>
                }
            }
            else
            {
                <div class="placeholder-content">
                    <div class="text-center text-muted p-5">
                        <i class="display-1">ðŸ§ </i>
                        <h5>Knowledge-Based Generator</h5>
                        <p>Select a preset and create a hinge instance to see intelligent parameter calculations.</p>
                        <small>Uses AI-driven knowledge base for optimized hinge configurations.</small>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<style>
    .knowledge-hinge-generator-container {
        padding: 20px;
    }

    .knowledge-hinge-details {
        background-color: #f8f9fa;
        border: 1px solid #dee2e6;
        border-radius: 8px;
        padding: 15px;
        font-family: 'Courier New', monospace;
        font-size: 0.85rem;
        line-height: 1.4;
        max-height: 400px;
        overflow-y: auto;
        white-space: pre-wrap;
    }

    .preview-container {
        border: 2px dashed #dee2e6;
        border-radius: 8px;
        padding: 15px;
        background: #f8f9fa;
        text-align: center;
    }

    .placeholder-content {
        border: 2px dashed #dee2e6;
        border-radius: 8px;
        min-height: 400px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: #f8f9fa;
    }

    .form-label {
        font-weight: 600;
        color: #495057;
        font-size: 0.9rem;
    }

    .form-control, .form-select {
        border-radius: 6px;
        font-size: 0.9rem;
    }
</style>
